# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type File {
  ID: String!
  name: String!
  folder: Folder
  url: String!
  fileType: String!
  ownerID: String!
  isTrash: Boolean!
  isPublic: Boolean!
  sharedUsers: [User!]
  readonlyUsers: [User!]
}

type Folder {
  ID: String!
  name: String!
  rootFolder: Folder
  files: [File!]
  subFolders: [Folder!]
  ownerID: String!
  path: String!
  isTrash: Boolean!
  sharedUsers: [User!]
  readonlyUsers: [User!]
  isPublic: Boolean!
}

type User {
  ID: String!
  name: String!
  email: String!
  password: String!
  rootFolder: Folder
  avatar: String
}

type PeopleWithAccessResponse {
  sharedUsers: [User!]!
  readonlyUsers: [User!]!
  owner: User!
  isPublic: Boolean!
}

type UserSearchPaginationResponse {
  results: [User!]!
  hasMore: Boolean!
}

type NewUserReturn {
  name: String!
  email: String!
  accessToken: String!
}

type Query {
  getMe: User!
  getAllUsers: [User!]!
  getUserByID(ID: String!): User!
  getFoldersOfFolder(folderID: String!): [Folder!]!
  getUserFiles: [File!]!
  getUsersBySearchPagination(search: String!, page: Float!, limit: Float!): UserSearchPaginationResponse!
  getUserTrashFolder: [Folder!]!
  getArrayOfRootFoldersName(folderID: String!): [Folder!]!
  getPeopleWithAccessToFolder(folderID: String!): PeopleWithAccessResponse!
  getFileByID(ID: String!): File!
  getFilesByFolder(folderID: String!): [File!]!
  getUserTrashFiles: [File!]!
}

type Mutation {
  login(email: String!, password: String!): String!
  signup(email: String!, password: String!, name: String!): NewUserReturn!
  createFolder(input: NewFolderInput!): Folder!
  uploadFolder(input: UploadFolderInput!): String!
  moveFolderToTrash(folderID: String!): String!
  moveFolderOutOfTrash(folderID: String!): String!
  deleteFolder(folderID: String!): String!
  addSharedUserToFolder(folderID: String!, sharedUserIDs: [String!]!, shouldSendMail: Boolean!, userMessage: String): String!
  addUserToFolderReadOnlyUsers(folderID: String!, readOnlyUserIDs: [String!]!, shouldSendMail: Boolean!, userMessage: String): String!
  setGeneralFolderAccess(folderID: String!, isPublic: Boolean!): String!
  removeUserFromFolder(folderID: String!, targetUserID: String!): String!
  changeUserRoleInFolder(folderID: String!, targetUserID: String!, targetRole: String!): String!
  uploadFile(file: Upload!, folderID: String!): File!
  moveFileToTrash(fileID: String!): File!
  restoreFileFromTrash(fileID: String!): File!
  deleteFile(fileID: String!): String!
}

input NewFolderInput {
  name: String!
  rootFolderID: String
}

input UploadFolderInput {
  folder: UploadFolder!
  rootFolderID: String!
}

input UploadFolder {
  files: [Upload!]
  folders: [UploadFolder!]
  name: String!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload